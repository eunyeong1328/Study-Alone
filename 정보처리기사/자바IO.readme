 회사에서 예외처리

"이렇게 까지 해줘야 되나?" 하는데까지 예외처리를 해줘야 한다.



라이브러리?찾는게 굉장히 중요

패키지=라이브러리

디렉터리로 각 개발자의 코드 관리



모듈

여러 패키지와 이미지 등의 자원을 모아 놓은 컨테이너

클래스들은 패키지로 만들고, 다시 패키지를 모듈로 만듦

클래스 - 패키지 - 모듈



자바

rt.jar의 단일체에 자바 API의 패키지들을 모두 담음

갑자기 점점 커져서

자바9부터는 rt.jar를 버리고 

자바 API를 많은 수(99개)의 모듈 파일에 나누어 저장



디폴트 실행 환경

modules에 필요한 모듈 및 클래스 로딩

필요한 것만 가져다 활용한다. 



맞춤형 실행 환경(custom JRE)

내가 원하는 것만 뽑아서 사용이 가능하다

기본적으로 필요한 java.lang은 들어가고 그래픽은 빼고 핸드폰의 메모리 용량을 낮춘다



자바 모듈화의 목적

컴포넌트들을 필요헤 따라 조립하여 사용하기 위함

컴퓨터 시스템의 불필요한 부담 감소



Object클래스 

java.lang

모든 클래스가 원하든 원하지 않든 모든 클래스에 강제 상속 

int hashCode() : 현 객체에 대한 해시 코드 값 리턴

toString() : 현 객체에 대한 문자열 표현을 리턴



Wrapper(감싼다)클래스

필드와 메소드를 갖고 사용할 수 있도록 한다.

기본 타입은 소문자, Wrapper 클래스 이름은 대문자

목적: 원래 기본 타입의 값을 객체로 쓸 수 없는데 객체로 다룰 수 있도록 한다.



java8

Integer i = new Integer(10); 

java9

Integer i = Integer.valueOf(10);

Float f = Float.valueOf((double)3.14);



io는 거의 라이브러리만으로 수업을 진행



메소드 만들때 메소드 이름을 기본적으로 이렇게 네이밍한다.

to : 변환 is : true,false get : 읽기 set : 쓰기



박싱 : 기본 타입의 값을 Wrapper 객체로 변환

언박싱 : Wrapper 객체에 들어 있는 기본 타입의 값을 빼내는 것



JDK1.5부터는 자동 박싱과 자동 언박싱을 지원







